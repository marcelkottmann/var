name: cmake matrix

on:
  push:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows Latest MSVC",
              os: windows-latest,
              cc: "cl",
              cxx: "cl",
              generators: "Visual Studio 16 2019",
            }
          - {
              name: "Windows Latest MinGW",
              os: windows-latest,
              cc: "gcc",
              cxx: "g++",
              generators: "Ninja",
            }
          - {
              name: "Ubuntu_Latest_GCC",
              os: ubuntu-latest,
              cc: "gcc",
              cxx: "g++",
              generators: "Ninja",
            }
          - {
              name: "macOS Latest Clang",
              os: macos-latest,
              cc: "clang",
              cxx: "clang++",
              generators: "Ninja",
            }

    steps:
      - uses: actions/checkout@v2
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          gcc --version
      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install p7zip cmake ninja
          ninja --version
          cmake --version
      - name: Build & Test
        shell: bash
        run: |
          ./run.sh test
